package gvprojects.superttt.model;

import gvprojects.sttt.model.CellState;
import gvprojects.sttt.model.GameStatus;
import gvprojects.sttt.model.ISuperTicTacToeModel;

/**
 * The model for the Super Tic Tac Toe to run off of.
 * 
 * @author Justin Rohr
 * @version 1/30/13 Winter 2013
 * @param <board>
 */

public class SuperTicTacToeModel<board> implements ISuperTicTacToeModel {
	int win_length;
	CellState[][] board;

	public SuperTicTacToeModel(int r, int c, int k) {
		board = new CellState[r][c];
		setCellsEmpty();
		this.win_length = k;

	}

	private void setCellsEmpty() {
		for (int r = 0; r < board.length; r++) {
			for (int j = 0; j < board[r].length; j++) {
				board[r][j] = CellState.EMPTY;
			}

		}
	}

	public CellState cellStatus(int r, int c) {
		return board[r][c];
	}

	public int numColumns() {
		return board[0].length;
	}

	public int numRows() {
		return board.length;
	}

	public void reset() {
		board = new CellState[0][0];
		win_length = 0;
	}

	public void select(int arg0, int arg1) {

	}

	public GameStatus status() {
		checkForWin(board, win_length);

		return GameStatus.IN_PROGRESS;
	}

	public static int findMinInt(int[] array) {
		int b = array[0];
		for (int a = 1; a <= array.length; a++) {
			if (b > array[a])
				b = array[a];
		}
		return b;
	}

	public static String findMinString(String[] array) {
		String str = array[0];
		for (int n = 1; n <= array.length; n++) {
			if (str.compareTo(array[n]) > 0)
				str = array[n];
		}

		return str;
	}

	public static <T extends Comparable<T>> T findMinObject(T[] array) {
		T str = array[0];
		for (int n = 1; n <= array.length; n++) {
			if (str.compareTo(array[n]) > 0)
				str = array[n];
		}

		return str;
	}

	public static Object[] checkForWin(CellState[][] game_board, int i) {

		return null;
	}
}
